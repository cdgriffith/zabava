<% include header.ejs %>


<video id="video" width="640" controls autoplay>
    <% for (let subs of subtitles || []) { %>
        <track label="English" kind="subtitles" srclang="<%= subs.language %>"
               src="/asset/<%= subs.file %>?stream=false&type=text/plain">
    <% } %>

</video>
<div id="info">
    <table class="table">
        <tbody>
        <tr>
            <th scope="row">Name</th>
            <td><%= media_name %></td>

        </tr>
        <tr>
            <th scope="row"><label for="track-select"> Language</label></th>
            <td><select id="track-select" name="track" onchange="setTrack()"></select></td>

        </tr>
        <tr>
            <th scope="row">Size</th>
            <td><%= size || 'unknown' %></td>
        </tr>
        <% if (series) { %>
            <tr>
                <th scope="row">Series</th>
                <td><%= series %></td>
            </tr>
        <% } %>
        <% if (season) { %>
            <tr>
                <th scope="row">Season</th>
                <td><%= season %></td>
            </tr>
        <% } %>
        <% if (episode) { %>
            <tr>
                <th scope="row">Episode</th>
                <td><%= episode %></td>
            </tr>
        <% } %>

        </tbody>
    </table>
</div>

<script src="/javascript/jquery.min.js" type="application/javascript"></script>
<script src="/javascript/shaka-player.compiled.debug.js" type="application/javascript"></script>

<script>

  let manifestUri = '/asset/<%= media_id %>/stream.mpd?stream=true'
  let player
  let availableTracks = []

  function initApp() {
    shaka.polyfill.installAll()

    if (shaka.Player.isBrowserSupported()) {
      initPlayer()
    } else {
      alert('This browser does not support MPEG-DASH videos')
      console.error('Browser not supported!')
    }
  }

  function initPlayer() {
    let video = document.getElementById('video')
    player = new shaka.Player(video)
    player.configure({
          drm: {
            clearKeys: {
              '<%= encryption.key_id %>': '<%= encryption.key %>'
            }
          },
          preferredAudioLanguage: 'eng',
          preferredTextLanguage: 'eng',
          streaming: {
            bufferingGoal: 120
          }
        }
    )
    window.player = player

    player.addEventListener('error', onErrorEvent)
    player.addEventListener('ended', onEnded)

    player.load(manifestUri).then(function () {
      availableTracks = player.getVariantTracks()
      for (let [index, track] of availableTracks.entries()) {
        if (track.width) {
          $('#track-select').append($('<option>', {value: index, text: track.language}))
        }
      }
    }).catch(onError)
  }

  function setTrack() {
    player.configure({abr: {enabled: false}})
    let trackNumber = parseInt($('#track-select').val())
    console.log(trackNumber)
    let selector = availableTracks[trackNumber]
    console.log(selector)
    player.selectVariantTrack(selector, true)
  }


  function onEnded(event) {
    // autoplay next if needed
  }

  function onErrorEvent(event) {
    // Extract the shaka.util.Error object from the event.
    onError(event.detail)
  }

  function onError(error) {
    // Log the error.
    // TODO print this on page
    console.error('Error code', error.code, 'object', error)
  }

  document.addEventListener('DOMContentLoaded', initApp)

</script>

<% include footer.ejs %>


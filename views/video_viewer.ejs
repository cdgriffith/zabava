<% include header.ejs %>

<div class="container-fluid">
    <div class="row" style="height: calc(100% - 100px)">
        <div class="col-sm-6 col-md-8 col-lg-9 auto-fit" style="padding: 0; z-index:10;">
            <video id="video" style="max-height: 100%; max-width: 100%;" width="100%" controls autoplay>
                <% for (let subs of subtitles || []) { %>
                    <track label="English" kind="subtitles" srclang="<%= subs.language %>"
                           src="/asset/<%= subs.file %>?stream=false&type=text/plain">
                <% } %>

            </video>
        </div>
        <div class="col-sm-6 col-md-4 col-lg-3">
            <% if (!!locals.series) { %>
                <h3><%= series %>: Season <%= season %>, Episode <%= episode %> (<%= media_name %>) </h3>

            <% } else { %>
                <h3><%= media_name %></h3>
            <% } %>
            <table class="table">
                <tbody>
                <tr>
                    <th scope="row"><label for="track-select"> Audio Track</label></th>
                    <td><select id="track-select" name="track" onchange="setTrack()"></select></td>
                </tr>
                <tr>
                    <th scope="row">Size</th>
                    <td><%= size || 'unknown' %> </td>
                </tr>
                <tr>
                    <th scope="row">Year Released</th>
                    <td><%= (!!locals.year)?year:'unknown' %> </td>
                </tr>
                <tr>
                    <th scope="row">Times watched</th>
                    <td><%= (!!locals.times_watched)?times_watched:'0' %> </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>

<script type="application/javascript" src="/javascript/jquery.min.js"></script>
<script type="application/javascript" src="/javascript/shaka-player.compiled.debug.js"></script>
<script type="application/javascript"  src="/javascript/iso-639-1.js"></script>

<script>

  let manifestUri = '/asset/<%= media_id %>/stream.mpd?stream=true'
  let player
  let availableTracks = []

  function initApp() {
    shaka.polyfill.installAll()

    if (shaka.Player.isBrowserSupported()) {
      initPlayer()
    } else {
      alert('This browser does not support MPEG-DASH videos')
      console.error('Browser not supported!')
    }
  }

  function initPlayer() {
    let video = document.getElementById('video')
    player = new shaka.Player(video)
    player.configure({
          drm: {
            clearKeys: {
              '<%= encryption.key_id %>': '<%= encryption.key %>'
            }
          },
          preferredAudioLanguage: "<%= default_language %>",
          streaming: {
            bufferingGoal: 10
          }
        }
    )
    window.player = player

    player.addEventListener('error', onErrorEvent)
    video.addEventListener('ended', onEnded) // NOT the player

    player.load(manifestUri).then(function () {
      availableTracks = player.getVariantTracks()
      for (let [index, track] of availableTracks.entries()) {
        if (track.width) {
          let audioType = 'Unknown'
          if (!track.channelsCount){
            console.error(`Track does not have channels: ${track}`)
          } else if (track.channelsCount > 2){
            audioType = 'Surround'
          } else if (track.channelsCount === 2){
            audioType = 'Stereo'
          } else (
              audioType = 'Mono'
          )

          let audioLanguage = track.language
          try {
            audioLanguage = ISO6391.getName(track.language)
          } catch (err) {
            console.error(`Dumbass coder missed this one: ${err}`)
          }

          $('#track-select').append($('<option>', {value: index, text: `${audioLanguage} - ${audioType}` }))
        }
      }
    }).catch(onError)
  }

  function setTrack() {
    player.configure({abr: {enabled: false}})
    let trackNumber = parseInt($('#track-select').val())
    console.log(trackNumber)
    let selector = availableTracks[trackNumber]
    console.log(selector)
    player.selectVariantTrack(selector, true)
  }


  function onEnded(event) {
    // autoplay next if needed
    console.log('Ended')
  }

  function onErrorEvent(event) {
    // Extract the shaka.util.Error object from the event.
    onError(event.detail)
  }

  function onError(error) {
    // Log the error.
    // TODO print this on page
    console.error('Error code', error.code, 'object', error)
  }

  document.addEventListener('DOMContentLoaded', initApp)

</script>

<% include footer.ejs %>

